@import "~bootstrap/scss/bootstrap";
@import "~bootstrap-icons/font/bootstrap-icons";
@import "~bootstrap-darkmode/scss/darktheme";

@import "~codemirror/lib/codemirror";
@import "~codemirror/theme/idea";
@import "~codemirror/theme/darcula";
@import "./styles/codemirror/hint";
@import "./styles/codemirror/lint";

@import "./styles/highlight";
@import "./styles/markdown";

/* --------------- CodeMirror --------------- */

.CodeMirror {
  border-width: 1px;
  border-style: solid;
  border-color: #ced4da;
  border-radius: .25rem;

  &:focus-within {
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, .25)
  }
}

.cm-h-100 .CodeMirror {
  height: 100%;
}

// Adapt Darcula theme to match darkmode colors
.cm-s-darcula {
  &.CodeMirror {
    background: $gray-900;
  }

  .CodeMirror-activeline-background {
    background: $gray-800;
  }

  .CodeMirror-gutters {
    background: $gray-800;
    border-right-color: $gray-800;
  }
}

/* --------------- Dark Mode Overrides --------------- */

@mixin darkmode-ext {
  .CodeMirror {
    border-color: $dark-border-color;
  }

  img.diagram, .diagram > svg {
    filter: invert(100%);
  }

  gridster-item {
    background-color: $dark-body-bg;
  }

  .as-split-gutter {
    background-color: $gray-900 !important;
  }
}

@media (prefers-color-scheme: dark) {
  [data-theme="auto"] {
    @include darkmode-ext;
  }
}

[data-theme="dark"] {
  @include darkmode-ext;
}

html {
  position: relative;
  min-height: 100%;
  height: 100%;
}

body {
  padding-top: 3.5rem;
  height: 100%;
}

/* --------------- Misc. --------------- */

a[href^="http"]::after {
  content: '↗';
}

.dropdown-item-checked::before {
  position: absolute;
  left: .4rem;
  content: '✓';
  font-weight: 600;
}

.dropdown-toggle.nav-link {
  cursor: pointer;
}

.feature-icon {
  margin-right: 1rem;
  font-size: xxx-large;
}

.backdrop-blur {
  backdrop-filter: blur(10px);
}

@each $name, $value in $colors {
  .bg-progress-#{$name} {
    $color: rgba($value, 0.1);
    background-image: linear-gradient(to right, $color 0, $color var(--percentage), transparent var(--percentage));
  }
}

/* --------------- Timelines --------------- */

$outline-color: #777;
$badge-color: #fff;

.timeline-list {
  border-top: 1px solid $outline-color;
  border-bottom: 1px solid $outline-color;

  list-style: none;
  counter-reset: my-awesome-counter;
  padding-inline-start: 0;
}

.timeline-item {
  position: relative;
  display: flex;
  padding: 8px 0;
  margin-left: 16px;
}

.timeline-item:not(.gu-mirror):before {
  display: block;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  width: 2px;

  content: "";

  background-color: $outline-color;
}

.timeline-item-badge {
  position: relative;
  z-index: 1;
  width: 32px;
  height: 32px;
  margin-right: 8px;
  margin-left: -15px;

  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;

  color: $badge-color;
  border: 2px solid $outline-color;
  border-radius: 50%;
}

.timeline-item-body {
  min-width: 0;
  max-width: 100%;
  margin-top: 4px;
  flex: auto;
}

/* --------------- Dragula --------------- */
/* from https://github.com/valor-software/ng2-dragula/#3-add-the-css-to-your-project */

/* in-flight clone */
.gu-mirror {
  position: fixed !important;
  margin: 0 !important;
  z-index: 9999 !important;
  opacity: 0.8;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=80)";
  filter: alpha(opacity=80);
  pointer-events: none;
}

/* high-performance display:none; helper */
.gu-hide {
  left: -9999px !important;
}

/* added to mirrorContainer (default = body) while dragging */
.gu-unselectable {
  -webkit-user-select: none !important;
  -moz-user-select: none !important;
  -ms-user-select: none !important;
  user-select: none !important;
}

/* added to the source element while its mirror is dragged */
.gu-transit {
  opacity: 0.2;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=20)";
  filter: alpha(opacity=20);
}

/* The mirrored list item is not part of a <ul> or <ol>, this prevents it from displaying strangely */
li.gu-mirror {
  list-style: none;
}
