// --------------- Plugins ---------------

plugins {
	id 'java'
	id 'application'
	id 'org.fulib.fulibGradle' version '0.3.0'
	id 'maven-publish'
	id 'com.jfrog.bintray' version '1.8.4'
	id 'de.clashsoft.simple-publish' version '0.3.0'
	id 'de.clashsoft.angular-gradle' version '0.1.6'
	id 'com.github.johnrengelman.shadow' version '4.0.4'
}

// --------------- Publication Info ---------------

group = 'org.fulib'
version = "git describe --tags".execute().text[1..-2] // strip v and \n
description = 'The fulib.org website and Fulib Scenarios Web App'

publishInfo {
	websiteUrl = 'https://www.fulib.org/'
	issueTrackerUrl = 'https://github.com/fujaba/fulib.org/issues'
	vcsUrl = 'https://github.com/fujaba/fulib.org'
	githubRepo = 'fujaba/fulib.org'
	labels = [ 'fulib', 'scenarios', 'webapp', 'website' ]

	license {
		shortName = 'BSD 3-Clause'
		longName = 'BSD 3-Clause "New" or "Revised" License'
		url = 'https://opensource.org/licenses/BSD-3-Clause'
	}

	developer {
		id = 'clashsoft'
		name = 'Adrian Kunz'
		email = 'clashsoft@hotmail.com'
	}

	developer {
		id = 'azuendorf'
		name = 'Albert ZÃ¼ndorf'
		email = 'zuendorf@uni-kassel.de'
	}
}

// --------------- General Settings ---------------

mainClassName = 'org.fulib.webapp.WebService'

sourceCompatibility = 1.8

shadowJar.archiveClassifier = 'all'

// --------------- Dependencies ---------------

repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	fulibScenarios group: 'org.fulib', name: 'fulibScenarios', version: '1.2.0'

	// --------------- Fulib Libraries ---------------

	compile group: 'org.fulib', name: 'fulibScenarios', version: '1.2.0'

	compile group: 'org.fulib', name: 'fulibMockups', version: '0.2.0'

	compile group: 'org.fulib', name: 'fulibTables', version: '1.3.0'

	// --------------- Other Libraries ---------------

	// https://mvnrepository.com/artifact/commons-io/commons-io
	compile group: 'commons-io', name: 'commons-io', version: '2.6'

	// https://mvnrepository.com/artifact/org.slf4j/slf4j-nop
	compile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.30'

	// https://mvnrepository.com/artifact/com.sparkjava/spark-core
	compile group: 'com.sparkjava', name: 'spark-core', version: '2.9.1'

	// https://mvnrepository.com/artifact/org.json/json
	compile group: 'org.json', name: 'json', version: '20190722'

	// https://mvnrepository.com/artifact/org.mongodb/mongodb-driver-sync
	compile group: 'org.mongodb', name: 'mongodb-driver-sync', version: '3.12.3'

	// compile instead of testCompile because the web service uses it
	// https://mvnrepository.com/artifact/junit/junit
	compile group: 'junit', name: 'junit', version: '4.13'

	// --------------- CommonMark ---------------

	// https://mvnrepository.com/artifact/com.atlassian.commonmark/commonmark
	compile group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.14.0'

	// https://mvnrepository.com/artifact/com.atlassian.commonmark/commonmark-ext-gfm-tables
	compile group: 'com.atlassian.commonmark', name: 'commonmark-ext-gfm-tables', version: '0.14.0'

	// https://mvnrepository.com/artifact/com.atlassian.commonmark/commonmark-ext-autolink
	compile group: 'com.atlassian.commonmark', name: 'commonmark-ext-autolink', version: '0.14.0'

	// https://mvnrepository.com/artifact/com.atlassian.commonmark/commonmark-ext-gfm-strikethrough
	compile group: 'com.atlassian.commonmark', name: 'commonmark-ext-gfm-strikethrough', version: '0.14.0'
}

// --------------- Version Injection ---------------

processResources {
	def version = project.version.toString()
	def fulibVersion = getDependencyVersion(configurations.compile, 'org.fulib', 'fulib')
	def fulibToolsVersion = getDependencyVersion(configurations.compile, 'org.fulib', 'fulibTools')
	def fulibTablesVersion = getDependencyVersion(configurations.compile, 'org.fulib', 'fulibTables')
	def fulibScenariosVersion = getDependencyVersion(configurations.compile, 'org.fulib', 'fulibScenarios')
	def fulibGradleVersion = getDependencyVersion(buildscript.configurations.classpath, 'org.fulib', 'fulibGradle')
	def fulibMockupsVersion = getDependencyVersion(configurations.compile, 'org.fulib', 'fulibMockups')

	filesMatching([
			'**/index.html',
			'**/*.js',
			'org/fulib/webapp/projectzip/build.gradle',
			'org/fulib/webapp/version.properties',
	]) {
		filter {
			it = it.replace('$$version$$', version)
			it = it.replace('$$fulibVersion$$', fulibVersion)
			it = it.replace('$$fulibToolsVersion$$', fulibToolsVersion)
			it = it.replace('$$fulibTablesVersion$$', fulibTablesVersion)
			it = it.replace('$$fulibScenariosVersion$$', fulibScenariosVersion)
			it = it.replace('$$fulibMockupsVersion$$', fulibMockupsVersion)
			it = it.replace('$$fulibGradleVersion$$', fulibGradleVersion)
			it
		}
	}
}

String getDependencyVersion(Configuration config, String group, String name) {
	config.resolvedConfiguration.resolvedArtifacts.findResult {
		def id = it.moduleVersion.id
		id.group == group && id.name == name ? id.version : null
	}
}

// --------------- Angular ---------------

angular {
	appDir = 'src/main/angular'
	outputDir = 'src/main/angular/dist'
	packageManager = 'pnpm'
	packageManagerArgs = [ 'install', '--shamefully-hoist' ]
}

processResources.filesMatching('fulibDotOrg/**') {
	it.path = it.path.replace('fulibDotOrg', 'org/fulib/webapp/static')
}

// --------------- Project Zip Wrapper ---------------

wrapper.doLast {
	copy {
		from '.'
		include 'gradle/wrapper/**', 'gradlew', 'gradlew.bat'
		into 'src/main/resources/org/fulib/webapp/projectzip'

		// we have to save the wrapper jar as a zip, see
		// https://imperceptiblethoughts.com/shadow/configuration/dependencies/
		// "Embedding Jar Files Inside Your Shadow Jar"
		rename 'gradle-wrapper.jar', 'gradle-wrapper.jar.zip'
	}
}

// --------------- Test Scenarios ---------------

def testScenariosDir = file 'src/main/resources/org/fulib/webapp/static/examples'
def testOutputDir = file "$buildDir/generated/sources/scenarios/java/test"

sourceSets.test.scenarios.srcDir testScenariosDir
sourceSets.test.java.srcDir testOutputDir

tasks.named("generateTestScenarioSource") {
	inputDirectory = testScenariosDir
	modelDirectory = testOutputDir
	testDirectory = testOutputDir
}
