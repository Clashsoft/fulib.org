name: CI/CD

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - bugfix

jobs:
  deployment:
    name: Deployment Setup
    runs-on: ubuntu-latest
    steps:
      - name: Set Deployment Options
        id: deployment
        run: |
          VERSION="${GITHUB_REF##*/}"
          case "$GITHUB_REF" in
            refs/heads/develop) NAMESPACE=dev ;;
            refs/tags/v*) NAMESPACE=prod ;;
          esac
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=namespace::$NAMESPACE"
    outputs:
      version: ${{ steps.deployment.outputs.version }}
      namespace: ${{ steps.deployment.outputs.namespace }}
  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    needs: [ deployment ]
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'pnpm'
          cache-dependency-path: frontend/pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build Angular
        run: pnpm build
      - name: Build the Docker Image
        if: needs.deployment.outputs.namespace
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-frontend
          image_tag: ${{ needs.deployment.outputs.version }}
          context: frontend/
      - name: Deploy to Rancher
        if: needs.deployment.outputs.namespace
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ needs.deployment.outputs.namespace }}
          deployment: fulib-frontend
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-frontend:${{ needs.deployment.outputs.version }}
  backend:
    name: Backend
    runs-on: ubuntu-latest
    needs: [ deployment ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
          java-package: jdk
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('backend/*.gradle') }}
          restore-keys: gradle-${{ runner.os }}-
      - name: Build with Gradle
        run: ./gradlew :backend:build && ./gradlew --stop
      - name: Build the Backend Docker Image
        if: needs.deployment.outputs.namespace
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-backend
          image_tag: ${{ needs.deployment.outputs.version }}
          context: backend/
      - name: Deploy the Backend to Rancher
        if: needs.deployment.outputs.namespace
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ needs.deployment.outputs.namespace }}
          deployment: fulib-backend
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-backend:${{ needs.deployment.outputs.version }}
  workflows:
    name: Workflows
    runs-on: ubuntu-latest
    needs: [ deployment ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
          java-package: jdk
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('workflows/*.gradle') }}
          restore-keys: gradle-${{ runner.os }}-
      - name: Build with Gradle
        run: ./gradlew :workflows:build && ./gradlew --stop
      - name: Build the Workflows Docker Image
        if: needs.deployment.outputs.namespace
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-workflows
          image_tag: ${{ needs.deployment.outputs.version }}
          context: workflows/
      - name: Deploy the Workflows Backend to Rancher
        if: needs.deployment.outputs.namespace
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ needs.deployment.outputs.namespace }}
          deployment: workflows-backend
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-workflows:${{ needs.deployment.outputs.version }}
  assignments-service:
    name: Assignments Service
    runs-on: ubuntu-latest
    needs: [ deployment ]
    defaults:
      run:
        working-directory: services
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build the Docker Image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-assignments-service
          image_tag: ${{ needs.deployment.outputs.version }}
          build_extra_args: "--build-arg=SERVICE=assignments"
          context: services/
          push_image_and_stages: ${{ if(needs.deployment.outputs.namespace, true, false) }}
      - name: Deploy to Rancher
        if: needs.deployment.outputs.namespace
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ needs.deployment.outputs.namespace }}
          deployment: fulib-assignments-service
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-assignments-service:${{ needs.deployment.outputs.version }}
  projects-service:
    name: Projects Service
    runs-on: ubuntu-latest
    needs: [ deployment ]
    defaults:
      run:
        working-directory: services
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build the Docker Image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-projects-service
          image_tag: ${{ needs.deployment.outputs.version }}
          build_extra_args: "--build-arg=SERVICE=projects"
          context: services/
          push_image_and_stages: ${{ if(needs.deployment.outputs.namespace, true, false) }}
      - name: Deploy to Rancher
        if: needs.deployment.outputs.namespace
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ needs.deployment.outputs.namespace }}
          deployment: fulib-projects-service
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-projects-service:${{ needs.deployment.outputs.version }}
  projects-container:
    name: Projects Container
    runs-on: ubuntu-latest
    needs: [ deployment ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 17
          java-package: jdk
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('projects/*.gradle') }}
          restore-keys: gradle-${{ runner.os }}-
      - name: Build with Gradle
        run: ./gradlew :projects:build && ./gradlew --stop
      - name: Build the Project Container Docker Image
        if: needs.deployment.outputs.namespace
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-projects
          image_tag: ${{ needs.deployment.outputs.version }}
          context: projects/
  projects-runtime:
    name: Projects Runtime
    runs-on: ubuntu-latest
    needs: [ deployment, projects-container ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build the Projects Proxy Docker Image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-projects-proxy
          image_tag: ${{ needs.deployment.outputs.version }}
          context: projects-proxy/
          push_image_and_stages: ${{ if(needs.deployment.outputs.namespace, true, false) }}
      - name: Build the Projects Runtime Docker Image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-projects-runtime
          image_tag: ${{ needs.deployment.outputs.version }}
          context: projects-runtime/
          push_image_and_stages: ${{ if(needs.deployment.outputs.namespace, true, false) }}
      - name: Deploy the Projects Runtime to Rancher
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ needs.deployment.outputs.namespace }}
          deployment: fulib-projects-runtime
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-projects-runtime:${{ needs.deployment.outputs.version }}
