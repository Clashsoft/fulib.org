name: CI/CD

on:
  - push

jobs:
  frontend:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        node:
          - '14'
        os:
          - ubuntu
          - windows
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install PNPM
        run: npm install -g pnpm
      - name: Cache PNPM Store
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            /.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm
      - name: Install Angular CLI
        run: pnpm install -g @angular/cli
      - name: Setup Angular CLI to use PNPM
        run: ng config -g cli.packageManager pnpm
      - name: Install packages
        run: pnpm install --shamefully-hoist
      - name: Build Angular
        run: ng build --prod
      - name: Deploy to Rancher
        if: matrix.os == 'ubuntu' && matrix.node == 14 && (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v'))
        run: |
          VERSION="${GITHUB_REF##*/}"
          TAG="${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-frontend:$VERSION"
          DEPLOYMENT=fulib-frontend
          if [[ "$VERSION" == "develop" ]]
          then
            NAMESPACE=dev
          else
            NAMESPACE=prod
          fi
          docker login "${{ secrets.DOCKER_REGISTRY }}" -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
          docker build -t "$TAG" .
          docker push "$TAG"
          curl -X PATCH \
            -u "${{ secrets.RANCHER_USERNAME }}:${{ secrets.RANCHER_PASSWORD }}" \
            -H 'Content-Type: application/json-patch+json' \
            "${{ secrets.RANCHER_SERVER }}/k8s/clusters/${{ secrets.RANCHER_CLUSTER }}/apis/apps/v1/namespaces/$NAMESPACE/deployments/$DEPLOYMENT" \
            -d '[{"op": "replace", "path": "/spec/template/spec/containers/0/image", "value": "'"$TAG"'"}]'
          curl -X POST \
            -u "${{ secrets.RANCHER_USERNAME }}:${{ secrets.RANCHER_PASSWORD }}" \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            "${{ secrets.RANCHER_SERVER }}/v3/project/${{ secrets.RANCHER_CLUSTER }}:${{ secrets.RANCHER_PROJECT }}/workloads/deployment:$NAMESPACE:$DEPLOYMENT?action=redeploy"
  backend:
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        java:
          - 8
          - 11
        os:
          - ubuntu
          - windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          java-package: jdk
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew build && ./gradlew --stop
      - name: Deploy to Rancher
        if: matrix.os == 'ubuntu' && matrix.java == 8 && (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v'))
        working-directory: backend
        run: |
          VERSION="${GITHUB_REF##*/}"
          TAG="${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-backend:$VERSION"
          DEPLOYMENT=fulib-backend
          if [[ "$VERSION" == "develop" ]]
          then
            NAMESPACE=dev
          else
            NAMESPACE=prod
          fi
          docker login "${{ secrets.DOCKER_REGISTRY }}" -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
          docker build -t "$TAG" .
          docker push "$TAG"
          curl -X PATCH \
            -u "${{ secrets.RANCHER_USERNAME }}:${{ secrets.RANCHER_PASSWORD }}" \
            -H 'Content-Type: application/json-patch+json' \
            "${{ secrets.RANCHER_SERVER }}/k8s/clusters/${{ secrets.RANCHER_CLUSTER }}/apis/apps/v1/namespaces/$NAMESPACE/deployments/$DEPLOYMENT" \
            -d '[{"op": "replace", "path": "/spec/template/spec/containers/0/image", "value": "'"$TAG"'"}]'
          curl -X POST \
            -u "${{ secrets.RANCHER_USERNAME }}:${{ secrets.RANCHER_PASSWORD }}" \
            -H 'Accept: application/json' \
            -H 'Content-Type: application/json' \
            "${{ secrets.RANCHER_SERVER }}/v3/project/${{ secrets.RANCHER_CLUSTER }}:${{ secrets.RANCHER_PROJECT }}/workloads/deployment:$NAMESPACE:$DEPLOYMENT?action=redeploy"
