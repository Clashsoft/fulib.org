name: CI/CD

on:
  - push

jobs:
  frontend:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        node:
          - '14'
        os:
          - ubuntu
          - windows
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install PNPM
        run: npm install -g pnpm
      - name: Cache PNPM Store
        uses: actions/cache@v2
        with:
          path: |
            ~/.pnpm-store
            /.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm
      - name: Install Angular CLI
        run: pnpm install -g @angular/cli
      - name: Setup Angular CLI to use PNPM
        run: ng config -g cli.packageManager pnpm
      - name: Install packages
        run: pnpm install --shamefully-hoist
      - name: Build Angular
        run: ng build --prod
      - name: Set Deployment Options
        id: deployment
        if: matrix.os == 'ubuntu' && matrix.node == 14 && (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v'))
        run: |
          VERSION="${GITHUB_REF##*/}"
          case "$VERSION" in
            develop) NAMESPACE=dev ;;
            *) NAMESPACE=prod ;;
          esac
          echo '::set-output name=ready::true'
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=namespace::$NAMESPACE"
      - name: Build the Docker Image
        if: steps.deployment.outputs.ready
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-frontend
          image_tag: ${{ steps.deployment.outputs.version }}
          context: frontend/
      - name: Deploy to Rancher
        if: steps.deployment.outputs.ready
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ steps.deployment.outputs.namespace }}
          deployment: fulib-frontend
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-frontend:${{ steps.deployment.outputs.version }}
  backend:
    name: Java ${{ matrix.java }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        java:
          - 8
          - 11
        os:
          - ubuntu
          - windows
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
          java-package: jdk
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build with Gradle
        run: ./gradlew build && ./gradlew --stop
      - name: Set Deployment Options
        id: deployment
        if: matrix.os == 'ubuntu' && matrix.java == 8 && (github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/v'))
        run: |
          VERSION="${GITHUB_REF##*/}"
          case "$VERSION" in
            develop) NAMESPACE=dev ;;
            *) NAMESPACE=prod ;;
          esac
          echo '::set-output name=ready::true'
          echo "::set-output name=version::$VERSION"
          echo "::set-output name=namespace::$NAMESPACE"
      - name: Build the Docker Image
        if: steps.deployment.outputs.ready
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          registry: ${{ secrets.DOCKER_REGISTRY }}
          image_name: fulib/fulib.org-backend
          image_tag: ${{ steps.deployment.outputs.version }}
          context: backend/
      - name: Deploy to Rancher
        if: steps.deployment.outputs.ready
        uses: sekassel-research/actions-rancher-update@2.0.2
        with:
          rancher_url: ${{ secrets.RANCHER_URL }}
          rancher_token: ${{ secrets.RANCHER_TOKEN }}
          cluster_id: ${{ secrets.RANCHER_CLUSTER }}
          project_id: ${{ secrets.RANCHER_PROJECT }}
          namespace: ${{ steps.deployment.outputs.namespace }}
          deployment: fulib-backend
          docker_image: ${{ secrets.DOCKER_REGISTRY }}/fulib/fulib.org-backend:${{ steps.deployment.outputs.version }}
